name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    env:
      # Recommended: gate model init in your code using this
      SKIP_MODEL_INIT: "1"
      PYTHONUNBUFFERED: "1"
      # Make sure tests can import the project
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Dev/test tools
          pip install pytest pytest-cov mypy pyright ruff

      - name: Print versions
        run: |
          python --version
          pytest --version
          mypy --version
          pyright --version
          ruff --version

      - name: Lint (ruff)
        run: |
          # Fail on style/lint issues
          ruff check .
          # Optional (fail if formatting needed):
          # ruff format --check .

      - name: Type check (mypy)
        run: |
          mypy .

      - name: Type check (pyright)
        run: |
          pyright

      - name: Run tests (pytest + coverage)
        run: |
          pytest -q --maxfail=1 --disable-warnings \
                 --cov=. --cov-report=xml --cov-report=term

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
